name: test
on:
  workflow_dispatch:
    inputs:
      productName:
        type: choice
        description: 'Product Name'
        required: true
        options:
        - airslate
        - pdffiller
        - signnow
      serviceName:
        description: 'Service name'
        required: true
      envName:
        type: choice
        description: 'Environment'
        required: true
        options:
        - dev+prod
        - dev
        - prod
jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      REPO_NAME: "EugeneAikashev/aws-ecr-infra"
      PRODUCT: ${{ github.event.inputs.productName }}
      SERVICE: ${{ github.event.inputs.serviceName }}
      ENV_NAME: ${{ github.event.inputs.envName }}
      REPO_PATH: "infra/PLACEHOLDER_ENV/ecr/${{ github.event.inputs.productName }}/${{ github.event.inputs.serviceName }}"

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO_NAME }}

    - name: test
      run: |
        set -euo pipefail

    - name: Templating
      run: |
        set -euo pipefail

        if [[ "${SERVICE}" =~ [^a-z0-9\-] ]]; then
          echo "Service name is invalid. Only lowercase alphanum and dash are allowed!"
          exit 1
        fi

        arrEnv=(${ENV_NAME//+/ })

        for curEnv in "${arrEnv[@]}"; do
          echo $curEnv

          REPO_PATH=${REPO_PATH/PLACEHOLDER_ENV/$curEnv}
          echo "${REPO_PATH}"

          if [[ -d "${REPO_PATH}" ]]; then
            echo "${REPO_PATH} is already exist!"
            exit 1
          fi

          # mkdir -p "${REPO_PATH}"
          # cp -rTv template/ecr/ "${REPO_PATH}"
          # sed -i "s/PLACEHOLDER_PRODUCT/${PRODUCT}/g" "${REPO_PATH}/settings.tfvars"
          # sed -i "s/PLACEHOLDER_SERVICE/${SERVICE}/g" "${REPO_PATH}/settings.tfvars"
          # grep ecr_repo_name "${REPO_PATH}/settings.tfvars"

        done
